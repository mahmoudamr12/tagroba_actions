name: Build and Deploy to Kubernetes

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Tag Docker Image
        run: |
          docker build -t mahmoudamr/jenkins_image02:latest .
          docker tag mahmoudamr/jenkins_image02:latest mahmoudamr/jenkins_image02:${{ github.sha }}

      - name: Push Docker Image to Docker Hub
        run: |
          docker push mahmoudamr/jenkins_image02:latest
          docker push mahmoudamr/jenkins_image02:${{ github.sha }}

  deploy:
    runs-on: self-hosted
    needs: build-and-push

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Kind (if not installed)
        run: |
          if ! command -v kind &> /dev/null; then
            echo "Installing Kind..."
            curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
            chmod +x ./kind
            sudo mv ./kind /usr/local/bin/kind
          fi

      - name: Create Kind Cluster
        run: |
          if ! kind get clusters | grep -q "my-cluster"; then
            kind create cluster --name my-cluster
          else
            echo "Cluster already exists, skipping creation."
          fi

      - name: Verify Kubernetes Setup
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment.yaml
          kubectl apply -f service.yaml

      - name: Wait for Pods to be Ready
        run: kubectl rollout status deployment/my-app -n default --timeout=120s

      - name: Verify Deployment
        run: kubectl get pods,services -n default

      - name: Test Service Connection
        run: |
          sleep 5  # Give time for service to start
          curl http://localhost:31019 || { echo "Service unreachable!"; exit 1; }
